// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: recon/jobmgmt/messages/messages.proto

package jobmgmt

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JobChannel int32

const (
	JobChannel_JOB_CHANNEL_UNSPECIFIED        JobChannel = 0
	JobChannel_JOB_CHANNEL_CRON               JobChannel = 1
	JobChannel_JOB_CHANNEL_MANUALLY_TRIGGERED JobChannel = 2
)

// Enum value maps for JobChannel.
var (
	JobChannel_name = map[int32]string{
		0: "JOB_CHANNEL_UNSPECIFIED",
		1: "JOB_CHANNEL_CRON",
		2: "JOB_CHANNEL_MANUALLY_TRIGGERED",
	}
	JobChannel_value = map[string]int32{
		"JOB_CHANNEL_UNSPECIFIED":        0,
		"JOB_CHANNEL_CRON":               1,
		"JOB_CHANNEL_MANUALLY_TRIGGERED": 2,
	}
)

func (x JobChannel) Enum() *JobChannel {
	p := new(JobChannel)
	*p = x
	return p
}

func (x JobChannel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobChannel) Descriptor() protoreflect.EnumDescriptor {
	return file_recon_jobmgmt_messages_messages_proto_enumTypes[0].Descriptor()
}

func (JobChannel) Type() protoreflect.EnumType {
	return &file_recon_jobmgmt_messages_messages_proto_enumTypes[0]
}

func (x JobChannel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobChannel.Descriptor instead.
func (JobChannel) EnumDescriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{0}
}

type JobStatus int32

const (
	JobStatus_JOB_STATUS_UNSPECIFIED JobStatus = 0
	JobStatus_JOB_STATUS_SUCCESS     JobStatus = 2
	JobStatus_JOB_STATUS_HAS_ERRORS  JobStatus = 3
)

// Enum value maps for JobStatus.
var (
	JobStatus_name = map[int32]string{
		0: "JOB_STATUS_UNSPECIFIED",
		2: "JOB_STATUS_SUCCESS",
		3: "JOB_STATUS_HAS_ERRORS",
	}
	JobStatus_value = map[string]int32{
		"JOB_STATUS_UNSPECIFIED": 0,
		"JOB_STATUS_SUCCESS":     2,
		"JOB_STATUS_HAS_ERRORS":  3,
	}
)

func (x JobStatus) Enum() *JobStatus {
	p := new(JobStatus)
	*p = x
	return p
}

func (x JobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_recon_jobmgmt_messages_messages_proto_enumTypes[1].Descriptor()
}

func (JobStatus) Type() protoreflect.EnumType {
	return &file_recon_jobmgmt_messages_messages_proto_enumTypes[1]
}

func (x JobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobStatus.Descriptor instead.
func (JobStatus) EnumDescriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{1}
}

type YesNoStatus int32

const (
	YesNoStatus_YES_NO_STATUS_UNSPECIFIED YesNoStatus = 0
	YesNoStatus_YES_NO_STATUS_YES         YesNoStatus = 1
	YesNoStatus_YES_NO_STATUS_NO          YesNoStatus = 2
)

// Enum value maps for YesNoStatus.
var (
	YesNoStatus_name = map[int32]string{
		0: "YES_NO_STATUS_UNSPECIFIED",
		1: "YES_NO_STATUS_YES",
		2: "YES_NO_STATUS_NO",
	}
	YesNoStatus_value = map[string]int32{
		"YES_NO_STATUS_UNSPECIFIED": 0,
		"YES_NO_STATUS_YES":         1,
		"YES_NO_STATUS_NO":          2,
	}
)

func (x YesNoStatus) Enum() *YesNoStatus {
	p := new(YesNoStatus)
	*p = x
	return p
}

func (x YesNoStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (YesNoStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_recon_jobmgmt_messages_messages_proto_enumTypes[2].Descriptor()
}

func (YesNoStatus) Type() protoreflect.EnumType {
	return &file_recon_jobmgmt_messages_messages_proto_enumTypes[2]
}

func (x YesNoStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use YesNoStatus.Descriptor instead.
func (YesNoStatus) EnumDescriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{2}
}

type SortDirection int32

const (
	SortDirection_SORT_DIRECTION_UNSPECIFIED SortDirection = 0
	SortDirection_SORT_DIRECTION_ASCENDING   SortDirection = 1
	SortDirection_SORT_DIRECTION_DESCENDING  SortDirection = 2
)

// Enum value maps for SortDirection.
var (
	SortDirection_name = map[int32]string{
		0: "SORT_DIRECTION_UNSPECIFIED",
		1: "SORT_DIRECTION_ASCENDING",
		2: "SORT_DIRECTION_DESCENDING",
	}
	SortDirection_value = map[string]int32{
		"SORT_DIRECTION_UNSPECIFIED": 0,
		"SORT_DIRECTION_ASCENDING":   1,
		"SORT_DIRECTION_DESCENDING":  2,
	}
)

func (x SortDirection) Enum() *SortDirection {
	p := new(SortDirection)
	*p = x
	return p
}

func (x SortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_recon_jobmgmt_messages_messages_proto_enumTypes[3].Descriptor()
}

func (SortDirection) Type() protoreflect.EnumType {
	return &file_recon_jobmgmt_messages_messages_proto_enumTypes[3]
}

func (x SortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortDirection.Descriptor instead.
func (SortDirection) EnumDescriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{3}
}

type JobPriority int32

const (
	JobPriority_JOB_PRIORITY_UNSPECIFIED JobPriority = 0
	JobPriority_JOB_PRIORITY_LOW         JobPriority = 1
	JobPriority_JOB_PRIORITY_MEDIUM      JobPriority = 2
	JobPriority_JOB_PRIORITY_HIGH        JobPriority = 3
	JobPriority_JOB_PRIORITY_CRITICAL    JobPriority = 4
)

// Enum value maps for JobPriority.
var (
	JobPriority_name = map[int32]string{
		0: "JOB_PRIORITY_UNSPECIFIED",
		1: "JOB_PRIORITY_LOW",
		2: "JOB_PRIORITY_MEDIUM",
		3: "JOB_PRIORITY_HIGH",
		4: "JOB_PRIORITY_CRITICAL",
	}
	JobPriority_value = map[string]int32{
		"JOB_PRIORITY_UNSPECIFIED": 0,
		"JOB_PRIORITY_LOW":         1,
		"JOB_PRIORITY_MEDIUM":      2,
		"JOB_PRIORITY_HIGH":        3,
		"JOB_PRIORITY_CRITICAL":    4,
	}
)

func (x JobPriority) Enum() *JobPriority {
	p := new(JobPriority)
	*p = x
	return p
}

func (x JobPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_recon_jobmgmt_messages_messages_proto_enumTypes[4].Descriptor()
}

func (JobPriority) Type() protoreflect.EnumType {
	return &file_recon_jobmgmt_messages_messages_proto_enumTypes[4]
}

func (x JobPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobPriority.Descriptor instead.
func (JobPriority) EnumDescriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{4}
}

type User_LoginType int32

const (
	User_LOGIN_TYPE_UNSPECIFIED         User_LoginType = 0
	User_LOGIN_TYPE_PASSWORDLOGIN       User_LoginType = 1
	User_LOGIN_TYPEACTIVEDIRECTORYLOGIN User_LoginType = 2
)

// Enum value maps for User_LoginType.
var (
	User_LoginType_name = map[int32]string{
		0: "LOGIN_TYPE_UNSPECIFIED",
		1: "LOGIN_TYPE_PASSWORDLOGIN",
		2: "LOGIN_TYPEACTIVEDIRECTORYLOGIN",
	}
	User_LoginType_value = map[string]int32{
		"LOGIN_TYPE_UNSPECIFIED":         0,
		"LOGIN_TYPE_PASSWORDLOGIN":       1,
		"LOGIN_TYPEACTIVEDIRECTORYLOGIN": 2,
	}
)

func (x User_LoginType) Enum() *User_LoginType {
	p := new(User_LoginType)
	*p = x
	return p
}

func (x User_LoginType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (User_LoginType) Descriptor() protoreflect.EnumDescriptor {
	return file_recon_jobmgmt_messages_messages_proto_enumTypes[5].Descriptor()
}

func (User_LoginType) Type() protoreflect.EnumType {
	return &file_recon_jobmgmt_messages_messages_proto_enumTypes[5]
}

func (x User_LoginType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use User_LoginType.Descriptor instead.
func (User_LoginType) EnumDescriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{5, 0}
}

// date-time -- use timestamp
type LogRecord_Status int32

const (
	LogRecord_STATUS_UNSPECIFIED LogRecord_Status = 0
	LogRecord_STATUS_SUCCESS     LogRecord_Status = 1
	LogRecord_STATUS_FAILED      LogRecord_Status = 2
)

// Enum value maps for LogRecord_Status.
var (
	LogRecord_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_FAILED",
	}
	LogRecord_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_FAILED":      2,
	}
)

func (x LogRecord_Status) Enum() *LogRecord_Status {
	p := new(LogRecord_Status)
	*p = x
	return p
}

func (x LogRecord_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogRecord_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_recon_jobmgmt_messages_messages_proto_enumTypes[6].Descriptor()
}

func (LogRecord_Status) Type() protoreflect.EnumType {
	return &file_recon_jobmgmt_messages_messages_proto_enumTypes[6]
}

func (x LogRecord_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogRecord_Status.Descriptor instead.
func (LogRecord_Status) EnumDescriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{9, 0}
}

type TriggerJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the admin service should call the remote service directly
	// and return the result
	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	// matching service name (will be checked by manager)
	Job       string `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
	Params    string `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"` // json encoded string
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *TriggerJobRequest) Reset() {
	*x = TriggerJobRequest{}
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerJobRequest) ProtoMessage() {}

func (x *TriggerJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerJobRequest.ProtoReflect.Descriptor instead.
func (*TriggerJobRequest) Descriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{0}
}

func (x *TriggerJobRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *TriggerJobRequest) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *TriggerJobRequest) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *TriggerJobRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type TriggerJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  JobStatus `protobuf:"varint,1,opt,name=status,proto3,enum=recon.jobmgmt.messages.JobStatus" json:"status,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TriggerJobResponse) Reset() {
	*x = TriggerJobResponse{}
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerJobResponse) ProtoMessage() {}

func (x *TriggerJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerJobResponse.ProtoReflect.Descriptor instead.
func (*TriggerJobResponse) Descriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{1}
}

func (x *TriggerJobResponse) GetStatus() JobStatus {
	if x != nil {
		return x.Status
	}
	return JobStatus_JOB_STATUS_UNSPECIFIED
}

func (x *TriggerJobResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// common struct for execution tasks
type Jobinstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InstanceId  string    `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"` // service instance id
	Name        string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string    `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	DateStr     string    `protobuf:"bytes,5,opt,name=date_str,json=dateStr,proto3" json:"date_str,omitempty"`
	JobStatus   JobStatus `protobuf:"varint,6,opt,name=job_status,json=jobStatus,proto3,enum=recon.jobmgmt.messages.JobStatus" json:"job_status,omitempty"`
	// repeated LogRecord log_lines  = 7; // populated during reads only
	// repeated LogRecord error_lines  = 8; // populated during reads only
	CreatedBy string `protobuf:"bytes,9,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy string `protobuf:"bytes,10,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	CreatedAt int64  `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// seconds
	ExecutionTime int64      `protobuf:"varint,13,opt,name=execution_time,json=executionTime,proto3" json:"execution_time,omitempty"`
	JobConfig     *JobConfig `protobuf:"bytes,14,opt,name=job_config,json=jobConfig,proto3" json:"job_config,omitempty"` // service config
	// unixnano
	Timestamp  int64      `protobuf:"varint,15,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	JobChannel JobChannel `protobuf:"varint,16,opt,name=job_channel,json=jobChannel,proto3,enum=recon.jobmgmt.messages.JobChannel" json:"job_channel,omitempty"`
}

func (x *Jobinstance) Reset() {
	*x = Jobinstance{}
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jobinstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jobinstance) ProtoMessage() {}

func (x *Jobinstance) ProtoReflect() protoreflect.Message {
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jobinstance.ProtoReflect.Descriptor instead.
func (*Jobinstance) Descriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{2}
}

func (x *Jobinstance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Jobinstance) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *Jobinstance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Jobinstance) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Jobinstance) GetDateStr() string {
	if x != nil {
		return x.DateStr
	}
	return ""
}

func (x *Jobinstance) GetJobStatus() JobStatus {
	if x != nil {
		return x.JobStatus
	}
	return JobStatus_JOB_STATUS_UNSPECIFIED
}

func (x *Jobinstance) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Jobinstance) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *Jobinstance) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Jobinstance) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Jobinstance) GetExecutionTime() int64 {
	if x != nil {
		return x.ExecutionTime
	}
	return 0
}

func (x *Jobinstance) GetJobConfig() *JobConfig {
	if x != nil {
		return x.JobConfig
	}
	return nil
}

func (x *Jobinstance) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Jobinstance) GetJobChannel() JobChannel {
	if x != nil {
		return x.JobChannel
	}
	return JobChannel_JOB_CHANNEL_UNSPECIFIED
}

type AuditRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId string `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UserId   string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// rfc3339
	DatetimeStr string `protobuf:"bytes,4,opt,name=datetime_str,json=datetimeStr,proto3" json:"datetime_str,omitempty"`
	Role        string `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *AuditRecord) Reset() {
	*x = AuditRecord{}
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditRecord) ProtoMessage() {}

func (x *AuditRecord) ProtoReflect() protoreflect.Message {
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditRecord.ProtoReflect.Descriptor instead.
func (*AuditRecord) Descriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{3}
}

func (x *AuditRecord) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *AuditRecord) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AuditRecord) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuditRecord) GetDatetimeStr() string {
	if x != nil {
		return x.DatetimeStr
	}
	return ""
}

func (x *AuditRecord) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId   string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	RoleName string `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{4}
}

func (x *Role) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *Role) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// comma separated roles
	Role      string         `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	LoginType User_LoginType `protobuf:"varint,3,opt,name=login_type,json=loginType,proto3,enum=recon.jobmgmt.messages.User_LoginType" json:"login_type,omitempty"`
	// TODO: buraya daha fazla detay eklenebilir
	// bu detaylar
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Name     string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Dn       string `protobuf:"bytes,6,opt,name=dn,proto3" json:"dn,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{5}
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *User) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *User) GetLoginType() User_LoginType {
	if x != nil {
		return x.LoginType
	}
	return User_LOGIN_TYPE_UNSPECIFIED
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetDn() string {
	if x != nil {
		return x.Dn
	}
	return ""
}

// AD group
type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string  `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Dn      string  `protobuf:"bytes,2,opt,name=dn,proto3" json:"dn,omitempty"`
	Members []*User `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{6}
}

func (x *Group) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Group) GetDn() string {
	if x != nil {
		return x.Dn
	}
	return ""
}

func (x *Group) GetMembers() []*User {
	if x != nil {
		return x.Members
	}
	return nil
}

type ListLogRecordsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize      int64         `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNum       int64         `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	SearchString  string        `protobuf:"bytes,3,opt,name=search_string,json=searchString,proto3" json:"search_string,omitempty"`
	SortFieldName string        `protobuf:"bytes,4,opt,name=sort_field_name,json=sortFieldName,proto3" json:"sort_field_name,omitempty"`
	SortDirection SortDirection `protobuf:"varint,5,opt,name=sort_direction,json=sortDirection,proto3,enum=recon.jobmgmt.messages.SortDirection" json:"sort_direction,omitempty"`
	StartDate     string        `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       string        `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	UserId        string        `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ServiceName   string        `protobuf:"bytes,9,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// int64 start_timestamp = 10; // unix timestamp nano
	// int64 end_timestamp = 12; // unix timestamp nano
	JobStatus LogRecord_Status `protobuf:"varint,10,opt,name=job_status,json=jobStatus,proto3,enum=recon.jobmgmt.messages.LogRecord_Status" json:"job_status,omitempty"`
	Job       string           `protobuf:"bytes,11,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *ListLogRecordsFilter) Reset() {
	*x = ListLogRecordsFilter{}
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLogRecordsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLogRecordsFilter) ProtoMessage() {}

func (x *ListLogRecordsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLogRecordsFilter.ProtoReflect.Descriptor instead.
func (*ListLogRecordsFilter) Descriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{7}
}

func (x *ListLogRecordsFilter) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListLogRecordsFilter) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListLogRecordsFilter) GetSearchString() string {
	if x != nil {
		return x.SearchString
	}
	return ""
}

func (x *ListLogRecordsFilter) GetSortFieldName() string {
	if x != nil {
		return x.SortFieldName
	}
	return ""
}

func (x *ListLogRecordsFilter) GetSortDirection() SortDirection {
	if x != nil {
		return x.SortDirection
	}
	return SortDirection_SORT_DIRECTION_UNSPECIFIED
}

func (x *ListLogRecordsFilter) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *ListLogRecordsFilter) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *ListLogRecordsFilter) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListLogRecordsFilter) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ListLogRecordsFilter) GetJobStatus() LogRecord_Status {
	if x != nil {
		return x.JobStatus
	}
	return LogRecord_STATUS_UNSPECIFIED
}

func (x *ListLogRecordsFilter) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

// Job execution log, stored in log collection
// Job logs should be gathered through GetJob or something
type JobConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId       string      `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	Service        string      `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Job            string      `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
	CronSchedule   string      `protobuf:"bytes,4,opt,name=cron_schedule,json=cronSchedule,proto3" json:"cron_schedule,omitempty"`
	ConfigDbParams string      `protobuf:"bytes,5,opt,name=config_db_params,json=configDbParams,proto3" json:"config_db_params,omitempty"`
	Enabled        YesNoStatus `protobuf:"varint,6,opt,name=enabled,proto3,enum=recon.jobmgmt.messages.YesNoStatus" json:"enabled,omitempty"`
	SendNotif      YesNoStatus `protobuf:"varint,7,opt,name=send_notif,json=sendNotif,proto3,enum=recon.jobmgmt.messages.YesNoStatus" json:"send_notif,omitempty"`
	CreatedAt      int64       `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // unix milliseconds
	UpdatedAt      int64       `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // unix milliseconds
}

func (x *JobConfig) Reset() {
	*x = JobConfig{}
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobConfig) ProtoMessage() {}

func (x *JobConfig) ProtoReflect() protoreflect.Message {
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobConfig.ProtoReflect.Descriptor instead.
func (*JobConfig) Descriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{8}
}

func (x *JobConfig) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *JobConfig) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *JobConfig) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *JobConfig) GetCronSchedule() string {
	if x != nil {
		return x.CronSchedule
	}
	return ""
}

func (x *JobConfig) GetConfigDbParams() string {
	if x != nil {
		return x.ConfigDbParams
	}
	return ""
}

func (x *JobConfig) GetEnabled() YesNoStatus {
	if x != nil {
		return x.Enabled
	}
	return YesNoStatus_YES_NO_STATUS_UNSPECIFIED
}

func (x *JobConfig) GetSendNotif() YesNoStatus {
	if x != nil {
		return x.SendNotif
	}
	return YesNoStatus_YES_NO_STATUS_UNSPECIFIED
}

func (x *JobConfig) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *JobConfig) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// Job execution log, stored in log collection
// Job logs should be gathered through GetJob or something
type LogRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId  string           `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"` // empty for create
	Timestamp int64            `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`              // UTC unixnano
	Message   string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Service   string           `protobuf:"bytes,10,opt,name=service,proto3" json:"service,omitempty"`
	Job       string           `protobuf:"bytes,11,opt,name=job,proto3" json:"job,omitempty"`
	Status    LogRecord_Status `protobuf:"varint,12,opt,name=status,proto3,enum=recon.jobmgmt.messages.LogRecord_Status" json:"status,omitempty"`
	Params    string           `protobuf:"bytes,13,opt,name=params,proto3" json:"params,omitempty"`                         // json string
	AckStatus bool             `protobuf:"varint,14,opt,name=ack_status,json=ackStatus,proto3" json:"ack_status,omitempty"` // is acknowledged ? default (false)
	// error_message (if failed)  -> use message
	BuildVersion string `protobuf:"bytes,15,opt,name=build_version,json=buildVersion,proto3" json:"build_version,omitempty"`
	Initiator    string `protobuf:"bytes,16,opt,name=initiator,proto3" json:"initiator,omitempty"` // either leave as cron, or reference some other method, UI, log message, for traceability,
}

func (x *LogRecord) Reset() {
	*x = LogRecord{}
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRecord) ProtoMessage() {}

func (x *LogRecord) ProtoReflect() protoreflect.Message {
	mi := &file_recon_jobmgmt_messages_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRecord.ProtoReflect.Descriptor instead.
func (*LogRecord) Descriptor() ([]byte, []int) {
	return file_recon_jobmgmt_messages_messages_proto_rawDescGZIP(), []int{9}
}

func (x *LogRecord) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *LogRecord) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogRecord) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogRecord) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *LogRecord) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *LogRecord) GetStatus() LogRecord_Status {
	if x != nil {
		return x.Status
	}
	return LogRecord_STATUS_UNSPECIFIED
}

func (x *LogRecord) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *LogRecord) GetAckStatus() bool {
	if x != nil {
		return x.AckStatus
	}
	return false
}

func (x *LogRecord) GetBuildVersion() string {
	if x != nil {
		return x.BuildVersion
	}
	return ""
}

func (x *LogRecord) GetInitiator() string {
	if x != nil {
		return x.Initiator
	}
	return ""
}

var File_recon_jobmgmt_messages_messages_proto protoreflect.FileDescriptor

var file_recon_jobmgmt_messages_messages_proto_rawDesc = []byte{
	0x0a, 0x25, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x2f, 0x6a, 0x6f, 0x62, 0x6d, 0x67, 0x6d, 0x74, 0x2f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x2e, 0x6a,
	0x6f, 0x62, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22,
	0x75, 0x0a, 0x11, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x69, 0x0a, 0x12, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x99, 0x04, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x72, 0x12, 0x40, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x2e,
	0x6a, 0x6f, 0x62, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x09, 0x6a, 0x6f, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x43, 0x0a, 0x0b, 0x6a, 0x6f, 0x62, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x0a, 0x6a, 0x6f, 0x62, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x94, 0x01,
	0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3c, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x64, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x6e, 0x22,
	0x69, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16,
	0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x4c, 0x4f, 0x47, 0x49,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x4c,
	0x4f, 0x47, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54,
	0x4f, 0x52, 0x59, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x02, 0x22, 0x6a, 0x0a, 0x05, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x64, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x6e, 0x12, 0x36,
	0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x67, 0x6d, 0x74, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0xba, 0x03, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0f,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6a, 0x6f, 0x62, 0x22, 0xe4, 0x02, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72,
	0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x72, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x62, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x44, 0x62, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x3d, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x91, 0x03, 0x0a, 0x09, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x72, 0x65, 0x63, 0x6f,
	0x6e, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x47, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x63,
	0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x17,
	0x4a, 0x4f, 0x42, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4a, 0x4f, 0x42,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x43, 0x52, 0x4f, 0x4e, 0x10, 0x01, 0x12,
	0x22, 0x0a, 0x1e, 0x4a, 0x4f, 0x42, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x4d,
	0x41, 0x4e, 0x55, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x45,
	0x44, 0x10, 0x02, 0x2a, 0x5a, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x16, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12,
	0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x48, 0x41, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x53, 0x10, 0x03, 0x2a,
	0x59, 0x0a, 0x0b, 0x59, 0x65, 0x73, 0x4e, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x19, 0x59, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x59, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x59,
	0x45, 0x53, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x59, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x10, 0x02, 0x2a, 0x6c, 0x0a, 0x0d, 0x53, 0x6f,
	0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x1a, 0x53,
	0x4f, 0x52, 0x54, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x53,
	0x4f, 0x52, 0x54, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x53,
	0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x4f, 0x52,
	0x54, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x53, 0x43,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x2a, 0x8c, 0x01, 0x0a, 0x0b, 0x4a, 0x6f, 0x62,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x18, 0x4a, 0x4f, 0x42, 0x5f,
	0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4a, 0x4f, 0x42, 0x5f, 0x50, 0x52,
	0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13,
	0x4a, 0x4f, 0x42, 0x5f, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x45, 0x44,
	0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4a, 0x4f, 0x42, 0x5f, 0x50, 0x52, 0x49,
	0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15,
	0x4a, 0x4f, 0x42, 0x5f, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x52, 0x49,
	0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x04, 0x42, 0x11, 0x5a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6e,
	0x70, 0x62, 0x2f, 0x6a, 0x6f, 0x62, 0x6d, 0x67, 0x6d, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_recon_jobmgmt_messages_messages_proto_rawDescOnce sync.Once
	file_recon_jobmgmt_messages_messages_proto_rawDescData = file_recon_jobmgmt_messages_messages_proto_rawDesc
)

func file_recon_jobmgmt_messages_messages_proto_rawDescGZIP() []byte {
	file_recon_jobmgmt_messages_messages_proto_rawDescOnce.Do(func() {
		file_recon_jobmgmt_messages_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_recon_jobmgmt_messages_messages_proto_rawDescData)
	})
	return file_recon_jobmgmt_messages_messages_proto_rawDescData
}

var file_recon_jobmgmt_messages_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_recon_jobmgmt_messages_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_recon_jobmgmt_messages_messages_proto_goTypes = []any{
	(JobChannel)(0),              // 0: recon.jobmgmt.messages.JobChannel
	(JobStatus)(0),               // 1: recon.jobmgmt.messages.JobStatus
	(YesNoStatus)(0),             // 2: recon.jobmgmt.messages.YesNoStatus
	(SortDirection)(0),           // 3: recon.jobmgmt.messages.SortDirection
	(JobPriority)(0),             // 4: recon.jobmgmt.messages.JobPriority
	(User_LoginType)(0),          // 5: recon.jobmgmt.messages.User.LoginType
	(LogRecord_Status)(0),        // 6: recon.jobmgmt.messages.LogRecord.Status
	(*TriggerJobRequest)(nil),    // 7: recon.jobmgmt.messages.TriggerJobRequest
	(*TriggerJobResponse)(nil),   // 8: recon.jobmgmt.messages.TriggerJobResponse
	(*Jobinstance)(nil),          // 9: recon.jobmgmt.messages.Jobinstance
	(*AuditRecord)(nil),          // 10: recon.jobmgmt.messages.AuditRecord
	(*Role)(nil),                 // 11: recon.jobmgmt.messages.Role
	(*User)(nil),                 // 12: recon.jobmgmt.messages.User
	(*Group)(nil),                // 13: recon.jobmgmt.messages.Group
	(*ListLogRecordsFilter)(nil), // 14: recon.jobmgmt.messages.ListLogRecordsFilter
	(*JobConfig)(nil),            // 15: recon.jobmgmt.messages.JobConfig
	(*LogRecord)(nil),            // 16: recon.jobmgmt.messages.LogRecord
}
var file_recon_jobmgmt_messages_messages_proto_depIdxs = []int32{
	1,  // 0: recon.jobmgmt.messages.TriggerJobResponse.status:type_name -> recon.jobmgmt.messages.JobStatus
	1,  // 1: recon.jobmgmt.messages.Jobinstance.job_status:type_name -> recon.jobmgmt.messages.JobStatus
	15, // 2: recon.jobmgmt.messages.Jobinstance.job_config:type_name -> recon.jobmgmt.messages.JobConfig
	0,  // 3: recon.jobmgmt.messages.Jobinstance.job_channel:type_name -> recon.jobmgmt.messages.JobChannel
	5,  // 4: recon.jobmgmt.messages.User.login_type:type_name -> recon.jobmgmt.messages.User.LoginType
	12, // 5: recon.jobmgmt.messages.Group.members:type_name -> recon.jobmgmt.messages.User
	3,  // 6: recon.jobmgmt.messages.ListLogRecordsFilter.sort_direction:type_name -> recon.jobmgmt.messages.SortDirection
	6,  // 7: recon.jobmgmt.messages.ListLogRecordsFilter.job_status:type_name -> recon.jobmgmt.messages.LogRecord.Status
	2,  // 8: recon.jobmgmt.messages.JobConfig.enabled:type_name -> recon.jobmgmt.messages.YesNoStatus
	2,  // 9: recon.jobmgmt.messages.JobConfig.send_notif:type_name -> recon.jobmgmt.messages.YesNoStatus
	6,  // 10: recon.jobmgmt.messages.LogRecord.status:type_name -> recon.jobmgmt.messages.LogRecord.Status
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_recon_jobmgmt_messages_messages_proto_init() }
func file_recon_jobmgmt_messages_messages_proto_init() {
	if File_recon_jobmgmt_messages_messages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recon_jobmgmt_messages_messages_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_recon_jobmgmt_messages_messages_proto_goTypes,
		DependencyIndexes: file_recon_jobmgmt_messages_messages_proto_depIdxs,
		EnumInfos:         file_recon_jobmgmt_messages_messages_proto_enumTypes,
		MessageInfos:      file_recon_jobmgmt_messages_messages_proto_msgTypes,
	}.Build()
	File_recon_jobmgmt_messages_messages_proto = out.File
	file_recon_jobmgmt_messages_messages_proto_rawDesc = nil
	file_recon_jobmgmt_messages_messages_proto_goTypes = nil
	file_recon_jobmgmt_messages_messages_proto_depIdxs = nil
}
